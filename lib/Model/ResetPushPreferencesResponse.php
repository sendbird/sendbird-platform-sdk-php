<?php
/**
 * ResetPushPreferencesResponse
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Sendbird
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Sendbird Platform SDK
 *
 * Sendbird Platform API SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendbird.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Sendbird\Model;

use \ArrayAccess;
use \Sendbird\ObjectSerializer;

/**
 * ResetPushPreferencesResponse Class Doc Comment
 *
 * @category Class
 * @package  Sendbird
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class ResetPushPreferencesResponse implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'resetPushPreferencesResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'snooze_start_ts' => 'string',
        'start_hour' => 'float',
        'snooze_enabled' => 'bool',
        'end_min' => 'float',
        'timezone' => 'string',
        'block_push_from_bots' => 'bool',
        'push_blocked_bot_ids' => 'float[]',
        'start_min' => 'float',
        'snooze_end_ts' => 'string',
        'do_not_disturb' => 'bool',
        'end_hour' => 'float',
        'enable_push_for_replies' => 'bool',
        'push_sound' => 'string',
        'push_trigger_option' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'snooze_start_ts' => null,
        'start_hour' => null,
        'snooze_enabled' => null,
        'end_min' => null,
        'timezone' => null,
        'block_push_from_bots' => null,
        'push_blocked_bot_ids' => null,
        'start_min' => null,
        'snooze_end_ts' => null,
        'do_not_disturb' => null,
        'end_hour' => null,
        'enable_push_for_replies' => null,
        'push_sound' => null,
        'push_trigger_option' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'snooze_start_ts' => 'snooze_start_ts',
        'start_hour' => 'start_hour',
        'snooze_enabled' => 'snooze_enabled',
        'end_min' => 'end_min',
        'timezone' => 'timezone',
        'block_push_from_bots' => 'block_push_from_bots',
        'push_blocked_bot_ids' => 'push_blocked_bot_ids',
        'start_min' => 'start_min',
        'snooze_end_ts' => 'snooze_end_ts',
        'do_not_disturb' => 'do_not_disturb',
        'end_hour' => 'end_hour',
        'enable_push_for_replies' => 'enable_push_for_replies',
        'push_sound' => 'push_sound',
        'push_trigger_option' => 'push_trigger_option'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'snooze_start_ts' => 'setSnoozeStartTs',
        'start_hour' => 'setStartHour',
        'snooze_enabled' => 'setSnoozeEnabled',
        'end_min' => 'setEndMin',
        'timezone' => 'setTimezone',
        'block_push_from_bots' => 'setBlockPushFromBots',
        'push_blocked_bot_ids' => 'setPushBlockedBotIds',
        'start_min' => 'setStartMin',
        'snooze_end_ts' => 'setSnoozeEndTs',
        'do_not_disturb' => 'setDoNotDisturb',
        'end_hour' => 'setEndHour',
        'enable_push_for_replies' => 'setEnablePushForReplies',
        'push_sound' => 'setPushSound',
        'push_trigger_option' => 'setPushTriggerOption'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'snooze_start_ts' => 'getSnoozeStartTs',
        'start_hour' => 'getStartHour',
        'snooze_enabled' => 'getSnoozeEnabled',
        'end_min' => 'getEndMin',
        'timezone' => 'getTimezone',
        'block_push_from_bots' => 'getBlockPushFromBots',
        'push_blocked_bot_ids' => 'getPushBlockedBotIds',
        'start_min' => 'getStartMin',
        'snooze_end_ts' => 'getSnoozeEndTs',
        'do_not_disturb' => 'getDoNotDisturb',
        'end_hour' => 'getEndHour',
        'enable_push_for_replies' => 'getEnablePushForReplies',
        'push_sound' => 'getPushSound',
        'push_trigger_option' => 'getPushTriggerOption'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['snooze_start_ts'] = $data['snooze_start_ts'] ?? null;
        $this->container['start_hour'] = $data['start_hour'] ?? null;
        $this->container['snooze_enabled'] = $data['snooze_enabled'] ?? null;
        $this->container['end_min'] = $data['end_min'] ?? null;
        $this->container['timezone'] = $data['timezone'] ?? null;
        $this->container['block_push_from_bots'] = $data['block_push_from_bots'] ?? null;
        $this->container['push_blocked_bot_ids'] = $data['push_blocked_bot_ids'] ?? null;
        $this->container['start_min'] = $data['start_min'] ?? null;
        $this->container['snooze_end_ts'] = $data['snooze_end_ts'] ?? null;
        $this->container['do_not_disturb'] = $data['do_not_disturb'] ?? null;
        $this->container['end_hour'] = $data['end_hour'] ?? null;
        $this->container['enable_push_for_replies'] = $data['enable_push_for_replies'] ?? null;
        $this->container['push_sound'] = $data['push_sound'] ?? null;
        $this->container['push_trigger_option'] = $data['push_trigger_option'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets snooze_start_ts
     *
     * @return string|null
     */
    public function getSnoozeStartTs()
    {
        return $this->container['snooze_start_ts'];
    }

    /**
     * Sets snooze_start_ts
     *
     * @param string|null $snooze_start_ts snooze_start_ts
     *
     * @return self
     */
    public function setSnoozeStartTs($snooze_start_ts)
    {
        $this->container['snooze_start_ts'] = $snooze_start_ts;

        return $this;
    }

    /**
     * Gets start_hour
     *
     * @return float|null
     */
    public function getStartHour()
    {
        return $this->container['start_hour'];
    }

    /**
     * Sets start_hour
     *
     * @param float|null $start_hour start_hour
     *
     * @return self
     */
    public function setStartHour($start_hour)
    {
        $this->container['start_hour'] = $start_hour;

        return $this;
    }

    /**
     * Gets snooze_enabled
     *
     * @return bool|null
     */
    public function getSnoozeEnabled()
    {
        return $this->container['snooze_enabled'];
    }

    /**
     * Sets snooze_enabled
     *
     * @param bool|null $snooze_enabled snooze_enabled
     *
     * @return self
     */
    public function setSnoozeEnabled($snooze_enabled)
    {
        $this->container['snooze_enabled'] = $snooze_enabled;

        return $this;
    }

    /**
     * Gets end_min
     *
     * @return float|null
     */
    public function getEndMin()
    {
        return $this->container['end_min'];
    }

    /**
     * Sets end_min
     *
     * @param float|null $end_min end_min
     *
     * @return self
     */
    public function setEndMin($end_min)
    {
        $this->container['end_min'] = $end_min;

        return $this;
    }

    /**
     * Gets timezone
     *
     * @return string|null
     */
    public function getTimezone()
    {
        return $this->container['timezone'];
    }

    /**
     * Sets timezone
     *
     * @param string|null $timezone timezone
     *
     * @return self
     */
    public function setTimezone($timezone)
    {
        $this->container['timezone'] = $timezone;

        return $this;
    }

    /**
     * Gets block_push_from_bots
     *
     * @return bool|null
     */
    public function getBlockPushFromBots()
    {
        return $this->container['block_push_from_bots'];
    }

    /**
     * Sets block_push_from_bots
     *
     * @param bool|null $block_push_from_bots block_push_from_bots
     *
     * @return self
     */
    public function setBlockPushFromBots($block_push_from_bots)
    {
        $this->container['block_push_from_bots'] = $block_push_from_bots;

        return $this;
    }

    /**
     * Gets push_blocked_bot_ids
     *
     * @return float[]|null
     */
    public function getPushBlockedBotIds()
    {
        return $this->container['push_blocked_bot_ids'];
    }

    /**
     * Sets push_blocked_bot_ids
     *
     * @param float[]|null $push_blocked_bot_ids push_blocked_bot_ids
     *
     * @return self
     */
    public function setPushBlockedBotIds($push_blocked_bot_ids)
    {
        $this->container['push_blocked_bot_ids'] = $push_blocked_bot_ids;

        return $this;
    }

    /**
     * Gets start_min
     *
     * @return float|null
     */
    public function getStartMin()
    {
        return $this->container['start_min'];
    }

    /**
     * Sets start_min
     *
     * @param float|null $start_min start_min
     *
     * @return self
     */
    public function setStartMin($start_min)
    {
        $this->container['start_min'] = $start_min;

        return $this;
    }

    /**
     * Gets snooze_end_ts
     *
     * @return string|null
     */
    public function getSnoozeEndTs()
    {
        return $this->container['snooze_end_ts'];
    }

    /**
     * Sets snooze_end_ts
     *
     * @param string|null $snooze_end_ts snooze_end_ts
     *
     * @return self
     */
    public function setSnoozeEndTs($snooze_end_ts)
    {
        $this->container['snooze_end_ts'] = $snooze_end_ts;

        return $this;
    }

    /**
     * Gets do_not_disturb
     *
     * @return bool|null
     */
    public function getDoNotDisturb()
    {
        return $this->container['do_not_disturb'];
    }

    /**
     * Sets do_not_disturb
     *
     * @param bool|null $do_not_disturb do_not_disturb
     *
     * @return self
     */
    public function setDoNotDisturb($do_not_disturb)
    {
        $this->container['do_not_disturb'] = $do_not_disturb;

        return $this;
    }

    /**
     * Gets end_hour
     *
     * @return float|null
     */
    public function getEndHour()
    {
        return $this->container['end_hour'];
    }

    /**
     * Sets end_hour
     *
     * @param float|null $end_hour end_hour
     *
     * @return self
     */
    public function setEndHour($end_hour)
    {
        $this->container['end_hour'] = $end_hour;

        return $this;
    }

    /**
     * Gets enable_push_for_replies
     *
     * @return bool|null
     */
    public function getEnablePushForReplies()
    {
        return $this->container['enable_push_for_replies'];
    }

    /**
     * Sets enable_push_for_replies
     *
     * @param bool|null $enable_push_for_replies enable_push_for_replies
     *
     * @return self
     */
    public function setEnablePushForReplies($enable_push_for_replies)
    {
        $this->container['enable_push_for_replies'] = $enable_push_for_replies;

        return $this;
    }

    /**
     * Gets push_sound
     *
     * @return string|null
     */
    public function getPushSound()
    {
        return $this->container['push_sound'];
    }

    /**
     * Sets push_sound
     *
     * @param string|null $push_sound push_sound
     *
     * @return self
     */
    public function setPushSound($push_sound)
    {
        $this->container['push_sound'] = $push_sound;

        return $this;
    }

    /**
     * Gets push_trigger_option
     *
     * @return string|null
     */
    public function getPushTriggerOption()
    {
        return $this->container['push_trigger_option'];
    }

    /**
     * Sets push_trigger_option
     *
     * @param string|null $push_trigger_option push_trigger_option
     *
     * @return self
     */
    public function setPushTriggerOption($push_trigger_option)
    {
        $this->container['push_trigger_option'] = $push_trigger_option;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


