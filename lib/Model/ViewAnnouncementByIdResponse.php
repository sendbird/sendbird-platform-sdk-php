<?php
/**
 * ViewAnnouncementByIdResponse
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Sendbird
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Sendbird Platform SDK
 *
 * Sendbird Platform API Javascript SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Sendbird\Model;

use \ArrayAccess;
use \Sendbird\ObjectSerializer;

/**
 * ViewAnnouncementByIdResponse Class Doc Comment
 *
 * @category Class
 * @package  Sendbird
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class ViewAnnouncementByIdResponse implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'viewAnnouncementByIdResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'unique_id' => 'string',
        'announcement_group' => 'string',
        'message' => '\Sendbird\Model\ScheduleAnnouncementResponseMessage',
        'enable_push' => 'bool',
        'target_at' => 'string',
        'target_user_count' => 'float',
        'target_channel_count' => 'float',
        'status' => 'string',
        'scheduled_at' => 'float',
        'cease_at' => 'string',
        'resume_at' => 'string',
        'completed_at' => 'float',
        'sent_user_count' => 'float',
        'open_count' => 'float',
        'open_rate' => 'float',
        'create_channel' => 'bool',
        'create_channel_options' => '\Sendbird\Model\ScheduleAnnouncementResponseCreateChannelOptions',
        'end_at' => 'float',
        'mark_as_read' => 'bool',
        'sent_channel_count' => 'float',
        'target_channel_type' => 'string',
        'target_custom_type' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'unique_id' => null,
        'announcement_group' => null,
        'message' => null,
        'enable_push' => null,
        'target_at' => null,
        'target_user_count' => null,
        'target_channel_count' => null,
        'status' => null,
        'scheduled_at' => null,
        'cease_at' => null,
        'resume_at' => null,
        'completed_at' => null,
        'sent_user_count' => null,
        'open_count' => null,
        'open_rate' => null,
        'create_channel' => null,
        'create_channel_options' => null,
        'end_at' => null,
        'mark_as_read' => null,
        'sent_channel_count' => null,
        'target_channel_type' => null,
        'target_custom_type' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'unique_id' => 'unique_id',
        'announcement_group' => 'announcement_group',
        'message' => 'message',
        'enable_push' => 'enable_push',
        'target_at' => 'target_at',
        'target_user_count' => 'target_user_count',
        'target_channel_count' => 'target_channel_count',
        'status' => 'status',
        'scheduled_at' => 'scheduled_at',
        'cease_at' => 'cease_at',
        'resume_at' => 'resume_at',
        'completed_at' => 'completed_at',
        'sent_user_count' => 'sent_user_count',
        'open_count' => 'open_count',
        'open_rate' => 'open_rate',
        'create_channel' => 'create_channel',
        'create_channel_options' => 'create_channel_options',
        'end_at' => 'end_at',
        'mark_as_read' => 'mark_as_read',
        'sent_channel_count' => 'sent_channel_count',
        'target_channel_type' => 'target_channel_type',
        'target_custom_type' => 'target_custom_type'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'unique_id' => 'setUniqueId',
        'announcement_group' => 'setAnnouncementGroup',
        'message' => 'setMessage',
        'enable_push' => 'setEnablePush',
        'target_at' => 'setTargetAt',
        'target_user_count' => 'setTargetUserCount',
        'target_channel_count' => 'setTargetChannelCount',
        'status' => 'setStatus',
        'scheduled_at' => 'setScheduledAt',
        'cease_at' => 'setCeaseAt',
        'resume_at' => 'setResumeAt',
        'completed_at' => 'setCompletedAt',
        'sent_user_count' => 'setSentUserCount',
        'open_count' => 'setOpenCount',
        'open_rate' => 'setOpenRate',
        'create_channel' => 'setCreateChannel',
        'create_channel_options' => 'setCreateChannelOptions',
        'end_at' => 'setEndAt',
        'mark_as_read' => 'setMarkAsRead',
        'sent_channel_count' => 'setSentChannelCount',
        'target_channel_type' => 'setTargetChannelType',
        'target_custom_type' => 'setTargetCustomType'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'unique_id' => 'getUniqueId',
        'announcement_group' => 'getAnnouncementGroup',
        'message' => 'getMessage',
        'enable_push' => 'getEnablePush',
        'target_at' => 'getTargetAt',
        'target_user_count' => 'getTargetUserCount',
        'target_channel_count' => 'getTargetChannelCount',
        'status' => 'getStatus',
        'scheduled_at' => 'getScheduledAt',
        'cease_at' => 'getCeaseAt',
        'resume_at' => 'getResumeAt',
        'completed_at' => 'getCompletedAt',
        'sent_user_count' => 'getSentUserCount',
        'open_count' => 'getOpenCount',
        'open_rate' => 'getOpenRate',
        'create_channel' => 'getCreateChannel',
        'create_channel_options' => 'getCreateChannelOptions',
        'end_at' => 'getEndAt',
        'mark_as_read' => 'getMarkAsRead',
        'sent_channel_count' => 'getSentChannelCount',
        'target_channel_type' => 'getTargetChannelType',
        'target_custom_type' => 'getTargetCustomType'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['unique_id'] = $data['unique_id'] ?? null;
        $this->container['announcement_group'] = $data['announcement_group'] ?? null;
        $this->container['message'] = $data['message'] ?? null;
        $this->container['enable_push'] = $data['enable_push'] ?? null;
        $this->container['target_at'] = $data['target_at'] ?? null;
        $this->container['target_user_count'] = $data['target_user_count'] ?? null;
        $this->container['target_channel_count'] = $data['target_channel_count'] ?? null;
        $this->container['status'] = $data['status'] ?? null;
        $this->container['scheduled_at'] = $data['scheduled_at'] ?? null;
        $this->container['cease_at'] = $data['cease_at'] ?? null;
        $this->container['resume_at'] = $data['resume_at'] ?? null;
        $this->container['completed_at'] = $data['completed_at'] ?? null;
        $this->container['sent_user_count'] = $data['sent_user_count'] ?? null;
        $this->container['open_count'] = $data['open_count'] ?? null;
        $this->container['open_rate'] = $data['open_rate'] ?? null;
        $this->container['create_channel'] = $data['create_channel'] ?? null;
        $this->container['create_channel_options'] = $data['create_channel_options'] ?? null;
        $this->container['end_at'] = $data['end_at'] ?? null;
        $this->container['mark_as_read'] = $data['mark_as_read'] ?? null;
        $this->container['sent_channel_count'] = $data['sent_channel_count'] ?? null;
        $this->container['target_channel_type'] = $data['target_channel_type'] ?? null;
        $this->container['target_custom_type'] = $data['target_custom_type'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets unique_id
     *
     * @return string|null
     */
    public function getUniqueId()
    {
        return $this->container['unique_id'];
    }

    /**
     * Sets unique_id
     *
     * @param string|null $unique_id unique_id
     *
     * @return self
     */
    public function setUniqueId($unique_id)
    {
        $this->container['unique_id'] = $unique_id;

        return $this;
    }

    /**
     * Gets announcement_group
     *
     * @return string|null
     */
    public function getAnnouncementGroup()
    {
        return $this->container['announcement_group'];
    }

    /**
     * Sets announcement_group
     *
     * @param string|null $announcement_group announcement_group
     *
     * @return self
     */
    public function setAnnouncementGroup($announcement_group)
    {
        $this->container['announcement_group'] = $announcement_group;

        return $this;
    }

    /**
     * Gets message
     *
     * @return \Sendbird\Model\ScheduleAnnouncementResponseMessage|null
     */
    public function getMessage()
    {
        return $this->container['message'];
    }

    /**
     * Sets message
     *
     * @param \Sendbird\Model\ScheduleAnnouncementResponseMessage|null $message message
     *
     * @return self
     */
    public function setMessage($message)
    {
        $this->container['message'] = $message;

        return $this;
    }

    /**
     * Gets enable_push
     *
     * @return bool|null
     */
    public function getEnablePush()
    {
        return $this->container['enable_push'];
    }

    /**
     * Sets enable_push
     *
     * @param bool|null $enable_push enable_push
     *
     * @return self
     */
    public function setEnablePush($enable_push)
    {
        $this->container['enable_push'] = $enable_push;

        return $this;
    }

    /**
     * Gets target_at
     *
     * @return string|null
     */
    public function getTargetAt()
    {
        return $this->container['target_at'];
    }

    /**
     * Sets target_at
     *
     * @param string|null $target_at target_at
     *
     * @return self
     */
    public function setTargetAt($target_at)
    {
        $this->container['target_at'] = $target_at;

        return $this;
    }

    /**
     * Gets target_user_count
     *
     * @return float|null
     */
    public function getTargetUserCount()
    {
        return $this->container['target_user_count'];
    }

    /**
     * Sets target_user_count
     *
     * @param float|null $target_user_count target_user_count
     *
     * @return self
     */
    public function setTargetUserCount($target_user_count)
    {
        $this->container['target_user_count'] = $target_user_count;

        return $this;
    }

    /**
     * Gets target_channel_count
     *
     * @return float|null
     */
    public function getTargetChannelCount()
    {
        return $this->container['target_channel_count'];
    }

    /**
     * Sets target_channel_count
     *
     * @param float|null $target_channel_count target_channel_count
     *
     * @return self
     */
    public function setTargetChannelCount($target_channel_count)
    {
        $this->container['target_channel_count'] = $target_channel_count;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string|null
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string|null $status status
     *
     * @return self
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets scheduled_at
     *
     * @return float|null
     */
    public function getScheduledAt()
    {
        return $this->container['scheduled_at'];
    }

    /**
     * Sets scheduled_at
     *
     * @param float|null $scheduled_at scheduled_at
     *
     * @return self
     */
    public function setScheduledAt($scheduled_at)
    {
        $this->container['scheduled_at'] = $scheduled_at;

        return $this;
    }

    /**
     * Gets cease_at
     *
     * @return string|null
     */
    public function getCeaseAt()
    {
        return $this->container['cease_at'];
    }

    /**
     * Sets cease_at
     *
     * @param string|null $cease_at cease_at
     *
     * @return self
     */
    public function setCeaseAt($cease_at)
    {
        $this->container['cease_at'] = $cease_at;

        return $this;
    }

    /**
     * Gets resume_at
     *
     * @return string|null
     */
    public function getResumeAt()
    {
        return $this->container['resume_at'];
    }

    /**
     * Sets resume_at
     *
     * @param string|null $resume_at resume_at
     *
     * @return self
     */
    public function setResumeAt($resume_at)
    {
        $this->container['resume_at'] = $resume_at;

        return $this;
    }

    /**
     * Gets completed_at
     *
     * @return float|null
     */
    public function getCompletedAt()
    {
        return $this->container['completed_at'];
    }

    /**
     * Sets completed_at
     *
     * @param float|null $completed_at completed_at
     *
     * @return self
     */
    public function setCompletedAt($completed_at)
    {
        $this->container['completed_at'] = $completed_at;

        return $this;
    }

    /**
     * Gets sent_user_count
     *
     * @return float|null
     */
    public function getSentUserCount()
    {
        return $this->container['sent_user_count'];
    }

    /**
     * Sets sent_user_count
     *
     * @param float|null $sent_user_count sent_user_count
     *
     * @return self
     */
    public function setSentUserCount($sent_user_count)
    {
        $this->container['sent_user_count'] = $sent_user_count;

        return $this;
    }

    /**
     * Gets open_count
     *
     * @return float|null
     */
    public function getOpenCount()
    {
        return $this->container['open_count'];
    }

    /**
     * Sets open_count
     *
     * @param float|null $open_count open_count
     *
     * @return self
     */
    public function setOpenCount($open_count)
    {
        $this->container['open_count'] = $open_count;

        return $this;
    }

    /**
     * Gets open_rate
     *
     * @return float|null
     */
    public function getOpenRate()
    {
        return $this->container['open_rate'];
    }

    /**
     * Sets open_rate
     *
     * @param float|null $open_rate open_rate
     *
     * @return self
     */
    public function setOpenRate($open_rate)
    {
        $this->container['open_rate'] = $open_rate;

        return $this;
    }

    /**
     * Gets create_channel
     *
     * @return bool|null
     */
    public function getCreateChannel()
    {
        return $this->container['create_channel'];
    }

    /**
     * Sets create_channel
     *
     * @param bool|null $create_channel create_channel
     *
     * @return self
     */
    public function setCreateChannel($create_channel)
    {
        $this->container['create_channel'] = $create_channel;

        return $this;
    }

    /**
     * Gets create_channel_options
     *
     * @return \Sendbird\Model\ScheduleAnnouncementResponseCreateChannelOptions|null
     */
    public function getCreateChannelOptions()
    {
        return $this->container['create_channel_options'];
    }

    /**
     * Sets create_channel_options
     *
     * @param \Sendbird\Model\ScheduleAnnouncementResponseCreateChannelOptions|null $create_channel_options create_channel_options
     *
     * @return self
     */
    public function setCreateChannelOptions($create_channel_options)
    {
        $this->container['create_channel_options'] = $create_channel_options;

        return $this;
    }

    /**
     * Gets end_at
     *
     * @return float|null
     */
    public function getEndAt()
    {
        return $this->container['end_at'];
    }

    /**
     * Sets end_at
     *
     * @param float|null $end_at end_at
     *
     * @return self
     */
    public function setEndAt($end_at)
    {
        $this->container['end_at'] = $end_at;

        return $this;
    }

    /**
     * Gets mark_as_read
     *
     * @return bool|null
     */
    public function getMarkAsRead()
    {
        return $this->container['mark_as_read'];
    }

    /**
     * Sets mark_as_read
     *
     * @param bool|null $mark_as_read mark_as_read
     *
     * @return self
     */
    public function setMarkAsRead($mark_as_read)
    {
        $this->container['mark_as_read'] = $mark_as_read;

        return $this;
    }

    /**
     * Gets sent_channel_count
     *
     * @return float|null
     */
    public function getSentChannelCount()
    {
        return $this->container['sent_channel_count'];
    }

    /**
     * Sets sent_channel_count
     *
     * @param float|null $sent_channel_count sent_channel_count
     *
     * @return self
     */
    public function setSentChannelCount($sent_channel_count)
    {
        $this->container['sent_channel_count'] = $sent_channel_count;

        return $this;
    }

    /**
     * Gets target_channel_type
     *
     * @return string|null
     */
    public function getTargetChannelType()
    {
        return $this->container['target_channel_type'];
    }

    /**
     * Sets target_channel_type
     *
     * @param string|null $target_channel_type target_channel_type
     *
     * @return self
     */
    public function setTargetChannelType($target_channel_type)
    {
        $this->container['target_channel_type'] = $target_channel_type;

        return $this;
    }

    /**
     * Gets target_custom_type
     *
     * @return string|null
     */
    public function getTargetCustomType()
    {
        return $this->container['target_custom_type'];
    }

    /**
     * Sets target_custom_type
     *
     * @param string|null $target_custom_type target_custom_type
     *
     * @return self
     */
    public function setTargetCustomType($target_custom_type)
    {
        $this->container['target_custom_type'] = $target_custom_type;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


