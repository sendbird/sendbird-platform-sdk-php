<?php
/**
 * SendBirdMessageResponse
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  Sendbird
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Sendbird Platform SDK
 *
 * Sendbird Platform API Javascript SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Sendbird\Model;

use \ArrayAccess;
use \Sendbird\ObjectSerializer;

/**
 * SendBirdMessageResponse Class Doc Comment
 *
 * @category Class
 * @package  Sendbird
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class SendBirdMessageResponse implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'SendBird.MessageResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'require_auth' => 'bool',
        'message_survival_seconds' => 'float',
        'custom_type' => 'string',
        'mentioned_users' => '\Sendbird\Model\SendBirdMessageResponseMentionedUsers[]',
        'translations' => 'object',
        'updated_at' => 'float',
        'is_op_msg' => 'bool',
        'is_removed' => 'bool',
        'user' => '\Sendbird\Model\SendBirdMessageResponseUser',
        'file' => 'object',
        'message' => 'string',
        'data' => 'string',
        'message_retention_hour' => 'float',
        'silent' => 'bool',
        'type' => 'string',
        'created_at' => 'float',
        'channel_type' => 'string',
        'req_id' => 'string',
        'mention_type' => 'string',
        'channel_url' => 'string',
        'message_id' => 'float',
        'size' => 'float',
        'sorted_metaarray' => 'object[]',
        'thread_info' => 'object',
        'parent_message_id' => 'float',
        'parent_message_info' => 'object',
        'is_reply_to_channel' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'require_auth' => null,
        'message_survival_seconds' => null,
        'custom_type' => null,
        'mentioned_users' => null,
        'translations' => null,
        'updated_at' => null,
        'is_op_msg' => null,
        'is_removed' => null,
        'user' => null,
        'file' => null,
        'message' => null,
        'data' => null,
        'message_retention_hour' => null,
        'silent' => null,
        'type' => null,
        'created_at' => null,
        'channel_type' => null,
        'req_id' => null,
        'mention_type' => null,
        'channel_url' => null,
        'message_id' => null,
        'size' => null,
        'sorted_metaarray' => null,
        'thread_info' => null,
        'parent_message_id' => null,
        'parent_message_info' => null,
        'is_reply_to_channel' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'require_auth' => 'require_auth',
        'message_survival_seconds' => 'message_survival_seconds',
        'custom_type' => 'custom_type',
        'mentioned_users' => 'mentioned_users',
        'translations' => 'translations',
        'updated_at' => 'updated_at',
        'is_op_msg' => 'is_op_msg',
        'is_removed' => 'is_removed',
        'user' => 'user',
        'file' => 'file',
        'message' => 'message',
        'data' => 'data',
        'message_retention_hour' => 'message_retention_hour',
        'silent' => 'silent',
        'type' => 'type',
        'created_at' => 'created_at',
        'channel_type' => 'channel_type',
        'req_id' => 'req_id',
        'mention_type' => 'mention_type',
        'channel_url' => 'channel_url',
        'message_id' => 'message_id',
        'size' => 'size',
        'sorted_metaarray' => 'sorted_metaarray',
        'thread_info' => 'thread_info',
        'parent_message_id' => 'parent_message_id',
        'parent_message_info' => 'parent_message_info',
        'is_reply_to_channel' => 'is_reply_to_channel'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'require_auth' => 'setRequireAuth',
        'message_survival_seconds' => 'setMessageSurvivalSeconds',
        'custom_type' => 'setCustomType',
        'mentioned_users' => 'setMentionedUsers',
        'translations' => 'setTranslations',
        'updated_at' => 'setUpdatedAt',
        'is_op_msg' => 'setIsOpMsg',
        'is_removed' => 'setIsRemoved',
        'user' => 'setUser',
        'file' => 'setFile',
        'message' => 'setMessage',
        'data' => 'setData',
        'message_retention_hour' => 'setMessageRetentionHour',
        'silent' => 'setSilent',
        'type' => 'setType',
        'created_at' => 'setCreatedAt',
        'channel_type' => 'setChannelType',
        'req_id' => 'setReqId',
        'mention_type' => 'setMentionType',
        'channel_url' => 'setChannelUrl',
        'message_id' => 'setMessageId',
        'size' => 'setSize',
        'sorted_metaarray' => 'setSortedMetaarray',
        'thread_info' => 'setThreadInfo',
        'parent_message_id' => 'setParentMessageId',
        'parent_message_info' => 'setParentMessageInfo',
        'is_reply_to_channel' => 'setIsReplyToChannel'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'require_auth' => 'getRequireAuth',
        'message_survival_seconds' => 'getMessageSurvivalSeconds',
        'custom_type' => 'getCustomType',
        'mentioned_users' => 'getMentionedUsers',
        'translations' => 'getTranslations',
        'updated_at' => 'getUpdatedAt',
        'is_op_msg' => 'getIsOpMsg',
        'is_removed' => 'getIsRemoved',
        'user' => 'getUser',
        'file' => 'getFile',
        'message' => 'getMessage',
        'data' => 'getData',
        'message_retention_hour' => 'getMessageRetentionHour',
        'silent' => 'getSilent',
        'type' => 'getType',
        'created_at' => 'getCreatedAt',
        'channel_type' => 'getChannelType',
        'req_id' => 'getReqId',
        'mention_type' => 'getMentionType',
        'channel_url' => 'getChannelUrl',
        'message_id' => 'getMessageId',
        'size' => 'getSize',
        'sorted_metaarray' => 'getSortedMetaarray',
        'thread_info' => 'getThreadInfo',
        'parent_message_id' => 'getParentMessageId',
        'parent_message_info' => 'getParentMessageInfo',
        'is_reply_to_channel' => 'getIsReplyToChannel'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['require_auth'] = $data['require_auth'] ?? null;
        $this->container['message_survival_seconds'] = $data['message_survival_seconds'] ?? null;
        $this->container['custom_type'] = $data['custom_type'] ?? null;
        $this->container['mentioned_users'] = $data['mentioned_users'] ?? null;
        $this->container['translations'] = $data['translations'] ?? null;
        $this->container['updated_at'] = $data['updated_at'] ?? null;
        $this->container['is_op_msg'] = $data['is_op_msg'] ?? null;
        $this->container['is_removed'] = $data['is_removed'] ?? null;
        $this->container['user'] = $data['user'] ?? null;
        $this->container['file'] = $data['file'] ?? null;
        $this->container['message'] = $data['message'] ?? null;
        $this->container['data'] = $data['data'] ?? null;
        $this->container['message_retention_hour'] = $data['message_retention_hour'] ?? null;
        $this->container['silent'] = $data['silent'] ?? null;
        $this->container['type'] = $data['type'] ?? null;
        $this->container['created_at'] = $data['created_at'] ?? null;
        $this->container['channel_type'] = $data['channel_type'] ?? null;
        $this->container['req_id'] = $data['req_id'] ?? null;
        $this->container['mention_type'] = $data['mention_type'] ?? null;
        $this->container['channel_url'] = $data['channel_url'] ?? null;
        $this->container['message_id'] = $data['message_id'] ?? null;
        $this->container['size'] = $data['size'] ?? null;
        $this->container['sorted_metaarray'] = $data['sorted_metaarray'] ?? null;
        $this->container['thread_info'] = $data['thread_info'] ?? null;
        $this->container['parent_message_id'] = $data['parent_message_id'] ?? null;
        $this->container['parent_message_info'] = $data['parent_message_info'] ?? null;
        $this->container['is_reply_to_channel'] = $data['is_reply_to_channel'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets require_auth
     *
     * @return bool|null
     */
    public function getRequireAuth()
    {
        return $this->container['require_auth'];
    }

    /**
     * Sets require_auth
     *
     * @param bool|null $require_auth require_auth
     *
     * @return self
     */
    public function setRequireAuth($require_auth)
    {
        $this->container['require_auth'] = $require_auth;

        return $this;
    }

    /**
     * Gets message_survival_seconds
     *
     * @return float|null
     */
    public function getMessageSurvivalSeconds()
    {
        return $this->container['message_survival_seconds'];
    }

    /**
     * Sets message_survival_seconds
     *
     * @param float|null $message_survival_seconds message_survival_seconds
     *
     * @return self
     */
    public function setMessageSurvivalSeconds($message_survival_seconds)
    {
        $this->container['message_survival_seconds'] = $message_survival_seconds;

        return $this;
    }

    /**
     * Gets custom_type
     *
     * @return string|null
     */
    public function getCustomType()
    {
        return $this->container['custom_type'];
    }

    /**
     * Sets custom_type
     *
     * @param string|null $custom_type custom_type
     *
     * @return self
     */
    public function setCustomType($custom_type)
    {
        $this->container['custom_type'] = $custom_type;

        return $this;
    }

    /**
     * Gets mentioned_users
     *
     * @return \Sendbird\Model\SendBirdMessageResponseMentionedUsers[]|null
     */
    public function getMentionedUsers()
    {
        return $this->container['mentioned_users'];
    }

    /**
     * Sets mentioned_users
     *
     * @param \Sendbird\Model\SendBirdMessageResponseMentionedUsers[]|null $mentioned_users mentioned_users
     *
     * @return self
     */
    public function setMentionedUsers($mentioned_users)
    {
        $this->container['mentioned_users'] = $mentioned_users;

        return $this;
    }

    /**
     * Gets translations
     *
     * @return object|null
     */
    public function getTranslations()
    {
        return $this->container['translations'];
    }

    /**
     * Sets translations
     *
     * @param object|null $translations translations
     *
     * @return self
     */
    public function setTranslations($translations)
    {
        $this->container['translations'] = $translations;

        return $this;
    }

    /**
     * Gets updated_at
     *
     * @return float|null
     */
    public function getUpdatedAt()
    {
        return $this->container['updated_at'];
    }

    /**
     * Sets updated_at
     *
     * @param float|null $updated_at updated_at
     *
     * @return self
     */
    public function setUpdatedAt($updated_at)
    {
        $this->container['updated_at'] = $updated_at;

        return $this;
    }

    /**
     * Gets is_op_msg
     *
     * @return bool|null
     */
    public function getIsOpMsg()
    {
        return $this->container['is_op_msg'];
    }

    /**
     * Sets is_op_msg
     *
     * @param bool|null $is_op_msg is_op_msg
     *
     * @return self
     */
    public function setIsOpMsg($is_op_msg)
    {
        $this->container['is_op_msg'] = $is_op_msg;

        return $this;
    }

    /**
     * Gets is_removed
     *
     * @return bool|null
     */
    public function getIsRemoved()
    {
        return $this->container['is_removed'];
    }

    /**
     * Sets is_removed
     *
     * @param bool|null $is_removed is_removed
     *
     * @return self
     */
    public function setIsRemoved($is_removed)
    {
        $this->container['is_removed'] = $is_removed;

        return $this;
    }

    /**
     * Gets user
     *
     * @return \Sendbird\Model\SendBirdMessageResponseUser|null
     */
    public function getUser()
    {
        return $this->container['user'];
    }

    /**
     * Sets user
     *
     * @param \Sendbird\Model\SendBirdMessageResponseUser|null $user user
     *
     * @return self
     */
    public function setUser($user)
    {
        $this->container['user'] = $user;

        return $this;
    }

    /**
     * Gets file
     *
     * @return object|null
     */
    public function getFile()
    {
        return $this->container['file'];
    }

    /**
     * Sets file
     *
     * @param object|null $file file
     *
     * @return self
     */
    public function setFile($file)
    {
        $this->container['file'] = $file;

        return $this;
    }

    /**
     * Gets message
     *
     * @return string|null
     */
    public function getMessage()
    {
        return $this->container['message'];
    }

    /**
     * Sets message
     *
     * @param string|null $message message
     *
     * @return self
     */
    public function setMessage($message)
    {
        $this->container['message'] = $message;

        return $this;
    }

    /**
     * Gets data
     *
     * @return string|null
     */
    public function getData()
    {
        return $this->container['data'];
    }

    /**
     * Sets data
     *
     * @param string|null $data data
     *
     * @return self
     */
    public function setData($data)
    {
        $this->container['data'] = $data;

        return $this;
    }

    /**
     * Gets message_retention_hour
     *
     * @return float|null
     */
    public function getMessageRetentionHour()
    {
        return $this->container['message_retention_hour'];
    }

    /**
     * Sets message_retention_hour
     *
     * @param float|null $message_retention_hour message_retention_hour
     *
     * @return self
     */
    public function setMessageRetentionHour($message_retention_hour)
    {
        $this->container['message_retention_hour'] = $message_retention_hour;

        return $this;
    }

    /**
     * Gets silent
     *
     * @return bool|null
     */
    public function getSilent()
    {
        return $this->container['silent'];
    }

    /**
     * Sets silent
     *
     * @param bool|null $silent silent
     *
     * @return self
     */
    public function setSilent($silent)
    {
        $this->container['silent'] = $silent;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string|null
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string|null $type type
     *
     * @return self
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets created_at
     *
     * @return float|null
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     *
     * @param float|null $created_at created_at
     *
     * @return self
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }

    /**
     * Gets channel_type
     *
     * @return string|null
     */
    public function getChannelType()
    {
        return $this->container['channel_type'];
    }

    /**
     * Sets channel_type
     *
     * @param string|null $channel_type channel_type
     *
     * @return self
     */
    public function setChannelType($channel_type)
    {
        $this->container['channel_type'] = $channel_type;

        return $this;
    }

    /**
     * Gets req_id
     *
     * @return string|null
     */
    public function getReqId()
    {
        return $this->container['req_id'];
    }

    /**
     * Sets req_id
     *
     * @param string|null $req_id req_id
     *
     * @return self
     */
    public function setReqId($req_id)
    {
        $this->container['req_id'] = $req_id;

        return $this;
    }

    /**
     * Gets mention_type
     *
     * @return string|null
     */
    public function getMentionType()
    {
        return $this->container['mention_type'];
    }

    /**
     * Sets mention_type
     *
     * @param string|null $mention_type mention_type
     *
     * @return self
     */
    public function setMentionType($mention_type)
    {
        $this->container['mention_type'] = $mention_type;

        return $this;
    }

    /**
     * Gets channel_url
     *
     * @return string|null
     */
    public function getChannelUrl()
    {
        return $this->container['channel_url'];
    }

    /**
     * Sets channel_url
     *
     * @param string|null $channel_url channel_url
     *
     * @return self
     */
    public function setChannelUrl($channel_url)
    {
        $this->container['channel_url'] = $channel_url;

        return $this;
    }

    /**
     * Gets message_id
     *
     * @return float|null
     */
    public function getMessageId()
    {
        return $this->container['message_id'];
    }

    /**
     * Sets message_id
     *
     * @param float|null $message_id message_id
     *
     * @return self
     */
    public function setMessageId($message_id)
    {
        $this->container['message_id'] = $message_id;

        return $this;
    }

    /**
     * Gets size
     *
     * @return float|null
     */
    public function getSize()
    {
        return $this->container['size'];
    }

    /**
     * Sets size
     *
     * @param float|null $size size
     *
     * @return self
     */
    public function setSize($size)
    {
        $this->container['size'] = $size;

        return $this;
    }

    /**
     * Gets sorted_metaarray
     *
     * @return object[]|null
     */
    public function getSortedMetaarray()
    {
        return $this->container['sorted_metaarray'];
    }

    /**
     * Sets sorted_metaarray
     *
     * @param object[]|null $sorted_metaarray sorted_metaarray
     *
     * @return self
     */
    public function setSortedMetaarray($sorted_metaarray)
    {
        $this->container['sorted_metaarray'] = $sorted_metaarray;

        return $this;
    }

    /**
     * Gets thread_info
     *
     * @return object|null
     */
    public function getThreadInfo()
    {
        return $this->container['thread_info'];
    }

    /**
     * Sets thread_info
     *
     * @param object|null $thread_info thread_info
     *
     * @return self
     */
    public function setThreadInfo($thread_info)
    {
        $this->container['thread_info'] = $thread_info;

        return $this;
    }

    /**
     * Gets parent_message_id
     *
     * @return float|null
     */
    public function getParentMessageId()
    {
        return $this->container['parent_message_id'];
    }

    /**
     * Sets parent_message_id
     *
     * @param float|null $parent_message_id parent_message_id
     *
     * @return self
     */
    public function setParentMessageId($parent_message_id)
    {
        $this->container['parent_message_id'] = $parent_message_id;

        return $this;
    }

    /**
     * Gets parent_message_info
     *
     * @return object|null
     */
    public function getParentMessageInfo()
    {
        return $this->container['parent_message_info'];
    }

    /**
     * Sets parent_message_info
     *
     * @param object|null $parent_message_info parent_message_info
     *
     * @return self
     */
    public function setParentMessageInfo($parent_message_info)
    {
        $this->container['parent_message_info'] = $parent_message_info;

        return $this;
    }

    /**
     * Gets is_reply_to_channel
     *
     * @return bool|null
     */
    public function getIsReplyToChannel()
    {
        return $this->container['is_reply_to_channel'];
    }

    /**
     * Sets is_reply_to_channel
     *
     * @param bool|null $is_reply_to_channel is_reply_to_channel
     *
     * @return self
     */
    public function setIsReplyToChannel($is_reply_to_channel)
    {
        $this->container['is_reply_to_channel'] = $is_reply_to_channel;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


