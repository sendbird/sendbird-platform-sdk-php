<?php
/**
 * SendBirdSendBirdInstance
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Sendbird Platform SDK
 *
 * Sendbird Platform API Javascript SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * SendBirdSendBirdInstance Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class SendBirdSendBirdInstance implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'SendBird.SendBirdInstance';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'admin_message' => 'object',
        'base_channel' => '\OpenAPI\Client\Model\SendBirdSendBirdInstanceBaseChannel',
        'base_message' => '\OpenAPI\Client\Model\SendBirdSendBirdInstanceBaseMessage',
        'channel_handler' => 'object',
        'collection_event_source' => '\OpenAPI\Client\Model\SendBirdGroupChannelContextSource',
        'connection_handler' => 'object',
        'file_message' => 'object',
        'file_message_params' => '\OpenAPI\Client\Model\SendBirdFileMessageParams',
        'group_channel' => 'object',
        'group_channel_change_logs_params' => '\OpenAPI\Client\Model\SendBirdGroupChannelChangeLogsParams',
        'group_channel_collection' => '\OpenAPI\Client\Model\SendBirdGroupChannelCollectionStatic',
        'group_channel_filter' => '\OpenAPI\Client\Model\SendBirdGroupChannelFilterStatic',
        'group_channel_list_query' => 'object',
        'group_channel_params' => '\OpenAPI\Client\Model\SendBirdGroupChannelParams',
        'group_channel_total_unread_message_count_params' => '\OpenAPI\Client\Model\SendBirdGroupChannelTotalUnreadMessageCountParams',
        'member' => 'object',
        'message_change_logs_params' => '\OpenAPI\Client\Model\SendBirdMessageChangeLogsParams',
        'message_collection' => '\OpenAPI\Client\Model\SendBirdMessageCollectionStatic',
        'message_filter' => 'object',
        'message_list_params' => '\OpenAPI\Client\Model\SendBirdMessageListParams',
        'message_meta_array' => '\OpenAPI\Client\Model\SendBirdMessageMetaArray',
        'message_retrieval_params' => '\OpenAPI\Client\Model\SendBirdMessageRetrievalParams',
        'open_channel' => 'object',
        'open_channel_params' => '\OpenAPI\Client\Model\SendBirdOpenChannelParams',
        'options' => '\OpenAPI\Client\Model\SendBirdOptions',
        'poll' => '\OpenAPI\Client\Model\SendBirdPollStatic',
        'poll_list_query' => '\OpenAPI\Client\Model\SendBirdPollListQuery',
        'poll_option' => 'object',
        'poll_params' => '\OpenAPI\Client\Model\SendBirdPollParams',
        'poll_retrieval_params' => '\OpenAPI\Client\Model\SendBirdPollRetrievalParams',
        'poll_voter_list_query' => '\OpenAPI\Client\Model\SendBirdPollVoterListQuery',
        'restricted_user' => '\OpenAPI\Client\Model\SendBirdRestrictedUserStatic',
        'scheduled_user_message_params' => '\OpenAPI\Client\Model\SendBirdScheduledUserMessageParams',
        'session_handler' => 'object',
        'threaded_message_list_params' => '\OpenAPI\Client\Model\SendBirdThreadedMessageListParams',
        'user' => 'object',
        'user_event_handler' => 'object',
        'user_message' => 'object',
        'user_message_params' => '\OpenAPI\Client\Model\SendBirdUserMessageParams',
        'app_info' => '\OpenAPI\Client\Model\SendBirdAppInfo',
        'current_user' => '\OpenAPI\Client\Model\SendBirdUser',
        'ekey' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'admin_message' => null,
        'base_channel' => null,
        'base_message' => null,
        'channel_handler' => null,
        'collection_event_source' => null,
        'connection_handler' => null,
        'file_message' => null,
        'file_message_params' => null,
        'group_channel' => null,
        'group_channel_change_logs_params' => null,
        'group_channel_collection' => null,
        'group_channel_filter' => null,
        'group_channel_list_query' => null,
        'group_channel_params' => null,
        'group_channel_total_unread_message_count_params' => null,
        'member' => null,
        'message_change_logs_params' => null,
        'message_collection' => null,
        'message_filter' => null,
        'message_list_params' => null,
        'message_meta_array' => null,
        'message_retrieval_params' => null,
        'open_channel' => null,
        'open_channel_params' => null,
        'options' => null,
        'poll' => null,
        'poll_list_query' => null,
        'poll_option' => null,
        'poll_params' => null,
        'poll_retrieval_params' => null,
        'poll_voter_list_query' => null,
        'restricted_user' => null,
        'scheduled_user_message_params' => null,
        'session_handler' => null,
        'threaded_message_list_params' => null,
        'user' => null,
        'user_event_handler' => null,
        'user_message' => null,
        'user_message_params' => null,
        'app_info' => null,
        'current_user' => null,
        'ekey' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'admin_message' => 'AdminMessage',
        'base_channel' => 'BaseChannel',
        'base_message' => 'BaseMessage',
        'channel_handler' => 'ChannelHandler',
        'collection_event_source' => 'CollectionEventSource',
        'connection_handler' => 'ConnectionHandler',
        'file_message' => 'FileMessage',
        'file_message_params' => 'FileMessageParams',
        'group_channel' => 'GroupChannel',
        'group_channel_change_logs_params' => 'GroupChannelChangeLogsParams',
        'group_channel_collection' => 'GroupChannelCollection',
        'group_channel_filter' => 'GroupChannelFilter',
        'group_channel_list_query' => 'GroupChannelListQuery',
        'group_channel_params' => 'GroupChannelParams',
        'group_channel_total_unread_message_count_params' => 'GroupChannelTotalUnreadMessageCountParams',
        'member' => 'Member',
        'message_change_logs_params' => 'MessageChangeLogsParams',
        'message_collection' => 'MessageCollection',
        'message_filter' => 'MessageFilter',
        'message_list_params' => 'MessageListParams',
        'message_meta_array' => 'MessageMetaArray',
        'message_retrieval_params' => 'MessageRetrievalParams',
        'open_channel' => 'OpenChannel',
        'open_channel_params' => 'OpenChannelParams',
        'options' => 'Options',
        'poll' => 'Poll',
        'poll_list_query' => 'PollListQuery',
        'poll_option' => 'PollOption',
        'poll_params' => 'PollParams',
        'poll_retrieval_params' => 'PollRetrievalParams',
        'poll_voter_list_query' => 'PollVoterListQuery',
        'restricted_user' => 'RestrictedUser',
        'scheduled_user_message_params' => 'ScheduledUserMessageParams',
        'session_handler' => 'SessionHandler',
        'threaded_message_list_params' => 'ThreadedMessageListParams',
        'user' => 'User',
        'user_event_handler' => 'UserEventHandler',
        'user_message' => 'UserMessage',
        'user_message_params' => 'UserMessageParams',
        'app_info' => 'appInfo',
        'current_user' => 'currentUser',
        'ekey' => 'ekey'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'admin_message' => 'setAdminMessage',
        'base_channel' => 'setBaseChannel',
        'base_message' => 'setBaseMessage',
        'channel_handler' => 'setChannelHandler',
        'collection_event_source' => 'setCollectionEventSource',
        'connection_handler' => 'setConnectionHandler',
        'file_message' => 'setFileMessage',
        'file_message_params' => 'setFileMessageParams',
        'group_channel' => 'setGroupChannel',
        'group_channel_change_logs_params' => 'setGroupChannelChangeLogsParams',
        'group_channel_collection' => 'setGroupChannelCollection',
        'group_channel_filter' => 'setGroupChannelFilter',
        'group_channel_list_query' => 'setGroupChannelListQuery',
        'group_channel_params' => 'setGroupChannelParams',
        'group_channel_total_unread_message_count_params' => 'setGroupChannelTotalUnreadMessageCountParams',
        'member' => 'setMember',
        'message_change_logs_params' => 'setMessageChangeLogsParams',
        'message_collection' => 'setMessageCollection',
        'message_filter' => 'setMessageFilter',
        'message_list_params' => 'setMessageListParams',
        'message_meta_array' => 'setMessageMetaArray',
        'message_retrieval_params' => 'setMessageRetrievalParams',
        'open_channel' => 'setOpenChannel',
        'open_channel_params' => 'setOpenChannelParams',
        'options' => 'setOptions',
        'poll' => 'setPoll',
        'poll_list_query' => 'setPollListQuery',
        'poll_option' => 'setPollOption',
        'poll_params' => 'setPollParams',
        'poll_retrieval_params' => 'setPollRetrievalParams',
        'poll_voter_list_query' => 'setPollVoterListQuery',
        'restricted_user' => 'setRestrictedUser',
        'scheduled_user_message_params' => 'setScheduledUserMessageParams',
        'session_handler' => 'setSessionHandler',
        'threaded_message_list_params' => 'setThreadedMessageListParams',
        'user' => 'setUser',
        'user_event_handler' => 'setUserEventHandler',
        'user_message' => 'setUserMessage',
        'user_message_params' => 'setUserMessageParams',
        'app_info' => 'setAppInfo',
        'current_user' => 'setCurrentUser',
        'ekey' => 'setEkey'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'admin_message' => 'getAdminMessage',
        'base_channel' => 'getBaseChannel',
        'base_message' => 'getBaseMessage',
        'channel_handler' => 'getChannelHandler',
        'collection_event_source' => 'getCollectionEventSource',
        'connection_handler' => 'getConnectionHandler',
        'file_message' => 'getFileMessage',
        'file_message_params' => 'getFileMessageParams',
        'group_channel' => 'getGroupChannel',
        'group_channel_change_logs_params' => 'getGroupChannelChangeLogsParams',
        'group_channel_collection' => 'getGroupChannelCollection',
        'group_channel_filter' => 'getGroupChannelFilter',
        'group_channel_list_query' => 'getGroupChannelListQuery',
        'group_channel_params' => 'getGroupChannelParams',
        'group_channel_total_unread_message_count_params' => 'getGroupChannelTotalUnreadMessageCountParams',
        'member' => 'getMember',
        'message_change_logs_params' => 'getMessageChangeLogsParams',
        'message_collection' => 'getMessageCollection',
        'message_filter' => 'getMessageFilter',
        'message_list_params' => 'getMessageListParams',
        'message_meta_array' => 'getMessageMetaArray',
        'message_retrieval_params' => 'getMessageRetrievalParams',
        'open_channel' => 'getOpenChannel',
        'open_channel_params' => 'getOpenChannelParams',
        'options' => 'getOptions',
        'poll' => 'getPoll',
        'poll_list_query' => 'getPollListQuery',
        'poll_option' => 'getPollOption',
        'poll_params' => 'getPollParams',
        'poll_retrieval_params' => 'getPollRetrievalParams',
        'poll_voter_list_query' => 'getPollVoterListQuery',
        'restricted_user' => 'getRestrictedUser',
        'scheduled_user_message_params' => 'getScheduledUserMessageParams',
        'session_handler' => 'getSessionHandler',
        'threaded_message_list_params' => 'getThreadedMessageListParams',
        'user' => 'getUser',
        'user_event_handler' => 'getUserEventHandler',
        'user_message' => 'getUserMessage',
        'user_message_params' => 'getUserMessageParams',
        'app_info' => 'getAppInfo',
        'current_user' => 'getCurrentUser',
        'ekey' => 'getEkey'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['admin_message'] = $data['admin_message'] ?? null;
        $this->container['base_channel'] = $data['base_channel'] ?? null;
        $this->container['base_message'] = $data['base_message'] ?? null;
        $this->container['channel_handler'] = $data['channel_handler'] ?? null;
        $this->container['collection_event_source'] = $data['collection_event_source'] ?? null;
        $this->container['connection_handler'] = $data['connection_handler'] ?? null;
        $this->container['file_message'] = $data['file_message'] ?? null;
        $this->container['file_message_params'] = $data['file_message_params'] ?? null;
        $this->container['group_channel'] = $data['group_channel'] ?? null;
        $this->container['group_channel_change_logs_params'] = $data['group_channel_change_logs_params'] ?? null;
        $this->container['group_channel_collection'] = $data['group_channel_collection'] ?? null;
        $this->container['group_channel_filter'] = $data['group_channel_filter'] ?? null;
        $this->container['group_channel_list_query'] = $data['group_channel_list_query'] ?? null;
        $this->container['group_channel_params'] = $data['group_channel_params'] ?? null;
        $this->container['group_channel_total_unread_message_count_params'] = $data['group_channel_total_unread_message_count_params'] ?? null;
        $this->container['member'] = $data['member'] ?? null;
        $this->container['message_change_logs_params'] = $data['message_change_logs_params'] ?? null;
        $this->container['message_collection'] = $data['message_collection'] ?? null;
        $this->container['message_filter'] = $data['message_filter'] ?? null;
        $this->container['message_list_params'] = $data['message_list_params'] ?? null;
        $this->container['message_meta_array'] = $data['message_meta_array'] ?? null;
        $this->container['message_retrieval_params'] = $data['message_retrieval_params'] ?? null;
        $this->container['open_channel'] = $data['open_channel'] ?? null;
        $this->container['open_channel_params'] = $data['open_channel_params'] ?? null;
        $this->container['options'] = $data['options'] ?? null;
        $this->container['poll'] = $data['poll'] ?? null;
        $this->container['poll_list_query'] = $data['poll_list_query'] ?? null;
        $this->container['poll_option'] = $data['poll_option'] ?? null;
        $this->container['poll_params'] = $data['poll_params'] ?? null;
        $this->container['poll_retrieval_params'] = $data['poll_retrieval_params'] ?? null;
        $this->container['poll_voter_list_query'] = $data['poll_voter_list_query'] ?? null;
        $this->container['restricted_user'] = $data['restricted_user'] ?? null;
        $this->container['scheduled_user_message_params'] = $data['scheduled_user_message_params'] ?? null;
        $this->container['session_handler'] = $data['session_handler'] ?? null;
        $this->container['threaded_message_list_params'] = $data['threaded_message_list_params'] ?? null;
        $this->container['user'] = $data['user'] ?? null;
        $this->container['user_event_handler'] = $data['user_event_handler'] ?? null;
        $this->container['user_message'] = $data['user_message'] ?? null;
        $this->container['user_message_params'] = $data['user_message_params'] ?? null;
        $this->container['app_info'] = $data['app_info'] ?? null;
        $this->container['current_user'] = $data['current_user'] ?? null;
        $this->container['ekey'] = $data['ekey'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets admin_message
     *
     * @return object|null
     */
    public function getAdminMessage()
    {
        return $this->container['admin_message'];
    }

    /**
     * Sets admin_message
     *
     * @param object|null $admin_message admin_message
     *
     * @return self
     */
    public function setAdminMessage($admin_message)
    {
        $this->container['admin_message'] = $admin_message;

        return $this;
    }

    /**
     * Gets base_channel
     *
     * @return \OpenAPI\Client\Model\SendBirdSendBirdInstanceBaseChannel|null
     */
    public function getBaseChannel()
    {
        return $this->container['base_channel'];
    }

    /**
     * Sets base_channel
     *
     * @param \OpenAPI\Client\Model\SendBirdSendBirdInstanceBaseChannel|null $base_channel base_channel
     *
     * @return self
     */
    public function setBaseChannel($base_channel)
    {
        $this->container['base_channel'] = $base_channel;

        return $this;
    }

    /**
     * Gets base_message
     *
     * @return \OpenAPI\Client\Model\SendBirdSendBirdInstanceBaseMessage|null
     */
    public function getBaseMessage()
    {
        return $this->container['base_message'];
    }

    /**
     * Sets base_message
     *
     * @param \OpenAPI\Client\Model\SendBirdSendBirdInstanceBaseMessage|null $base_message base_message
     *
     * @return self
     */
    public function setBaseMessage($base_message)
    {
        $this->container['base_message'] = $base_message;

        return $this;
    }

    /**
     * Gets channel_handler
     *
     * @return object|null
     */
    public function getChannelHandler()
    {
        return $this->container['channel_handler'];
    }

    /**
     * Sets channel_handler
     *
     * @param object|null $channel_handler channel_handler
     *
     * @return self
     */
    public function setChannelHandler($channel_handler)
    {
        $this->container['channel_handler'] = $channel_handler;

        return $this;
    }

    /**
     * Gets collection_event_source
     *
     * @return \OpenAPI\Client\Model\SendBirdGroupChannelContextSource|null
     */
    public function getCollectionEventSource()
    {
        return $this->container['collection_event_source'];
    }

    /**
     * Sets collection_event_source
     *
     * @param \OpenAPI\Client\Model\SendBirdGroupChannelContextSource|null $collection_event_source collection_event_source
     *
     * @return self
     */
    public function setCollectionEventSource($collection_event_source)
    {
        $this->container['collection_event_source'] = $collection_event_source;

        return $this;
    }

    /**
     * Gets connection_handler
     *
     * @return object|null
     */
    public function getConnectionHandler()
    {
        return $this->container['connection_handler'];
    }

    /**
     * Sets connection_handler
     *
     * @param object|null $connection_handler connection_handler
     *
     * @return self
     */
    public function setConnectionHandler($connection_handler)
    {
        $this->container['connection_handler'] = $connection_handler;

        return $this;
    }

    /**
     * Gets file_message
     *
     * @return object|null
     */
    public function getFileMessage()
    {
        return $this->container['file_message'];
    }

    /**
     * Sets file_message
     *
     * @param object|null $file_message file_message
     *
     * @return self
     */
    public function setFileMessage($file_message)
    {
        $this->container['file_message'] = $file_message;

        return $this;
    }

    /**
     * Gets file_message_params
     *
     * @return \OpenAPI\Client\Model\SendBirdFileMessageParams|null
     */
    public function getFileMessageParams()
    {
        return $this->container['file_message_params'];
    }

    /**
     * Sets file_message_params
     *
     * @param \OpenAPI\Client\Model\SendBirdFileMessageParams|null $file_message_params file_message_params
     *
     * @return self
     */
    public function setFileMessageParams($file_message_params)
    {
        $this->container['file_message_params'] = $file_message_params;

        return $this;
    }

    /**
     * Gets group_channel
     *
     * @return object|null
     */
    public function getGroupChannel()
    {
        return $this->container['group_channel'];
    }

    /**
     * Sets group_channel
     *
     * @param object|null $group_channel group_channel
     *
     * @return self
     */
    public function setGroupChannel($group_channel)
    {
        $this->container['group_channel'] = $group_channel;

        return $this;
    }

    /**
     * Gets group_channel_change_logs_params
     *
     * @return \OpenAPI\Client\Model\SendBirdGroupChannelChangeLogsParams|null
     */
    public function getGroupChannelChangeLogsParams()
    {
        return $this->container['group_channel_change_logs_params'];
    }

    /**
     * Sets group_channel_change_logs_params
     *
     * @param \OpenAPI\Client\Model\SendBirdGroupChannelChangeLogsParams|null $group_channel_change_logs_params group_channel_change_logs_params
     *
     * @return self
     */
    public function setGroupChannelChangeLogsParams($group_channel_change_logs_params)
    {
        $this->container['group_channel_change_logs_params'] = $group_channel_change_logs_params;

        return $this;
    }

    /**
     * Gets group_channel_collection
     *
     * @return \OpenAPI\Client\Model\SendBirdGroupChannelCollectionStatic|null
     */
    public function getGroupChannelCollection()
    {
        return $this->container['group_channel_collection'];
    }

    /**
     * Sets group_channel_collection
     *
     * @param \OpenAPI\Client\Model\SendBirdGroupChannelCollectionStatic|null $group_channel_collection group_channel_collection
     *
     * @return self
     */
    public function setGroupChannelCollection($group_channel_collection)
    {
        $this->container['group_channel_collection'] = $group_channel_collection;

        return $this;
    }

    /**
     * Gets group_channel_filter
     *
     * @return \OpenAPI\Client\Model\SendBirdGroupChannelFilterStatic|null
     */
    public function getGroupChannelFilter()
    {
        return $this->container['group_channel_filter'];
    }

    /**
     * Sets group_channel_filter
     *
     * @param \OpenAPI\Client\Model\SendBirdGroupChannelFilterStatic|null $group_channel_filter group_channel_filter
     *
     * @return self
     */
    public function setGroupChannelFilter($group_channel_filter)
    {
        $this->container['group_channel_filter'] = $group_channel_filter;

        return $this;
    }

    /**
     * Gets group_channel_list_query
     *
     * @return object|null
     */
    public function getGroupChannelListQuery()
    {
        return $this->container['group_channel_list_query'];
    }

    /**
     * Sets group_channel_list_query
     *
     * @param object|null $group_channel_list_query group_channel_list_query
     *
     * @return self
     */
    public function setGroupChannelListQuery($group_channel_list_query)
    {
        $this->container['group_channel_list_query'] = $group_channel_list_query;

        return $this;
    }

    /**
     * Gets group_channel_params
     *
     * @return \OpenAPI\Client\Model\SendBirdGroupChannelParams|null
     */
    public function getGroupChannelParams()
    {
        return $this->container['group_channel_params'];
    }

    /**
     * Sets group_channel_params
     *
     * @param \OpenAPI\Client\Model\SendBirdGroupChannelParams|null $group_channel_params group_channel_params
     *
     * @return self
     */
    public function setGroupChannelParams($group_channel_params)
    {
        $this->container['group_channel_params'] = $group_channel_params;

        return $this;
    }

    /**
     * Gets group_channel_total_unread_message_count_params
     *
     * @return \OpenAPI\Client\Model\SendBirdGroupChannelTotalUnreadMessageCountParams|null
     */
    public function getGroupChannelTotalUnreadMessageCountParams()
    {
        return $this->container['group_channel_total_unread_message_count_params'];
    }

    /**
     * Sets group_channel_total_unread_message_count_params
     *
     * @param \OpenAPI\Client\Model\SendBirdGroupChannelTotalUnreadMessageCountParams|null $group_channel_total_unread_message_count_params group_channel_total_unread_message_count_params
     *
     * @return self
     */
    public function setGroupChannelTotalUnreadMessageCountParams($group_channel_total_unread_message_count_params)
    {
        $this->container['group_channel_total_unread_message_count_params'] = $group_channel_total_unread_message_count_params;

        return $this;
    }

    /**
     * Gets member
     *
     * @return object|null
     */
    public function getMember()
    {
        return $this->container['member'];
    }

    /**
     * Sets member
     *
     * @param object|null $member member
     *
     * @return self
     */
    public function setMember($member)
    {
        $this->container['member'] = $member;

        return $this;
    }

    /**
     * Gets message_change_logs_params
     *
     * @return \OpenAPI\Client\Model\SendBirdMessageChangeLogsParams|null
     */
    public function getMessageChangeLogsParams()
    {
        return $this->container['message_change_logs_params'];
    }

    /**
     * Sets message_change_logs_params
     *
     * @param \OpenAPI\Client\Model\SendBirdMessageChangeLogsParams|null $message_change_logs_params message_change_logs_params
     *
     * @return self
     */
    public function setMessageChangeLogsParams($message_change_logs_params)
    {
        $this->container['message_change_logs_params'] = $message_change_logs_params;

        return $this;
    }

    /**
     * Gets message_collection
     *
     * @return \OpenAPI\Client\Model\SendBirdMessageCollectionStatic|null
     */
    public function getMessageCollection()
    {
        return $this->container['message_collection'];
    }

    /**
     * Sets message_collection
     *
     * @param \OpenAPI\Client\Model\SendBirdMessageCollectionStatic|null $message_collection message_collection
     *
     * @return self
     */
    public function setMessageCollection($message_collection)
    {
        $this->container['message_collection'] = $message_collection;

        return $this;
    }

    /**
     * Gets message_filter
     *
     * @return object|null
     */
    public function getMessageFilter()
    {
        return $this->container['message_filter'];
    }

    /**
     * Sets message_filter
     *
     * @param object|null $message_filter message_filter
     *
     * @return self
     */
    public function setMessageFilter($message_filter)
    {
        $this->container['message_filter'] = $message_filter;

        return $this;
    }

    /**
     * Gets message_list_params
     *
     * @return \OpenAPI\Client\Model\SendBirdMessageListParams|null
     */
    public function getMessageListParams()
    {
        return $this->container['message_list_params'];
    }

    /**
     * Sets message_list_params
     *
     * @param \OpenAPI\Client\Model\SendBirdMessageListParams|null $message_list_params message_list_params
     *
     * @return self
     */
    public function setMessageListParams($message_list_params)
    {
        $this->container['message_list_params'] = $message_list_params;

        return $this;
    }

    /**
     * Gets message_meta_array
     *
     * @return \OpenAPI\Client\Model\SendBirdMessageMetaArray|null
     */
    public function getMessageMetaArray()
    {
        return $this->container['message_meta_array'];
    }

    /**
     * Sets message_meta_array
     *
     * @param \OpenAPI\Client\Model\SendBirdMessageMetaArray|null $message_meta_array message_meta_array
     *
     * @return self
     */
    public function setMessageMetaArray($message_meta_array)
    {
        $this->container['message_meta_array'] = $message_meta_array;

        return $this;
    }

    /**
     * Gets message_retrieval_params
     *
     * @return \OpenAPI\Client\Model\SendBirdMessageRetrievalParams|null
     */
    public function getMessageRetrievalParams()
    {
        return $this->container['message_retrieval_params'];
    }

    /**
     * Sets message_retrieval_params
     *
     * @param \OpenAPI\Client\Model\SendBirdMessageRetrievalParams|null $message_retrieval_params message_retrieval_params
     *
     * @return self
     */
    public function setMessageRetrievalParams($message_retrieval_params)
    {
        $this->container['message_retrieval_params'] = $message_retrieval_params;

        return $this;
    }

    /**
     * Gets open_channel
     *
     * @return object|null
     */
    public function getOpenChannel()
    {
        return $this->container['open_channel'];
    }

    /**
     * Sets open_channel
     *
     * @param object|null $open_channel open_channel
     *
     * @return self
     */
    public function setOpenChannel($open_channel)
    {
        $this->container['open_channel'] = $open_channel;

        return $this;
    }

    /**
     * Gets open_channel_params
     *
     * @return \OpenAPI\Client\Model\SendBirdOpenChannelParams|null
     */
    public function getOpenChannelParams()
    {
        return $this->container['open_channel_params'];
    }

    /**
     * Sets open_channel_params
     *
     * @param \OpenAPI\Client\Model\SendBirdOpenChannelParams|null $open_channel_params open_channel_params
     *
     * @return self
     */
    public function setOpenChannelParams($open_channel_params)
    {
        $this->container['open_channel_params'] = $open_channel_params;

        return $this;
    }

    /**
     * Gets options
     *
     * @return \OpenAPI\Client\Model\SendBirdOptions|null
     */
    public function getOptions()
    {
        return $this->container['options'];
    }

    /**
     * Sets options
     *
     * @param \OpenAPI\Client\Model\SendBirdOptions|null $options options
     *
     * @return self
     */
    public function setOptions($options)
    {
        $this->container['options'] = $options;

        return $this;
    }

    /**
     * Gets poll
     *
     * @return \OpenAPI\Client\Model\SendBirdPollStatic|null
     */
    public function getPoll()
    {
        return $this->container['poll'];
    }

    /**
     * Sets poll
     *
     * @param \OpenAPI\Client\Model\SendBirdPollStatic|null $poll poll
     *
     * @return self
     */
    public function setPoll($poll)
    {
        $this->container['poll'] = $poll;

        return $this;
    }

    /**
     * Gets poll_list_query
     *
     * @return \OpenAPI\Client\Model\SendBirdPollListQuery|null
     */
    public function getPollListQuery()
    {
        return $this->container['poll_list_query'];
    }

    /**
     * Sets poll_list_query
     *
     * @param \OpenAPI\Client\Model\SendBirdPollListQuery|null $poll_list_query poll_list_query
     *
     * @return self
     */
    public function setPollListQuery($poll_list_query)
    {
        $this->container['poll_list_query'] = $poll_list_query;

        return $this;
    }

    /**
     * Gets poll_option
     *
     * @return object|null
     */
    public function getPollOption()
    {
        return $this->container['poll_option'];
    }

    /**
     * Sets poll_option
     *
     * @param object|null $poll_option poll_option
     *
     * @return self
     */
    public function setPollOption($poll_option)
    {
        $this->container['poll_option'] = $poll_option;

        return $this;
    }

    /**
     * Gets poll_params
     *
     * @return \OpenAPI\Client\Model\SendBirdPollParams|null
     */
    public function getPollParams()
    {
        return $this->container['poll_params'];
    }

    /**
     * Sets poll_params
     *
     * @param \OpenAPI\Client\Model\SendBirdPollParams|null $poll_params poll_params
     *
     * @return self
     */
    public function setPollParams($poll_params)
    {
        $this->container['poll_params'] = $poll_params;

        return $this;
    }

    /**
     * Gets poll_retrieval_params
     *
     * @return \OpenAPI\Client\Model\SendBirdPollRetrievalParams|null
     */
    public function getPollRetrievalParams()
    {
        return $this->container['poll_retrieval_params'];
    }

    /**
     * Sets poll_retrieval_params
     *
     * @param \OpenAPI\Client\Model\SendBirdPollRetrievalParams|null $poll_retrieval_params poll_retrieval_params
     *
     * @return self
     */
    public function setPollRetrievalParams($poll_retrieval_params)
    {
        $this->container['poll_retrieval_params'] = $poll_retrieval_params;

        return $this;
    }

    /**
     * Gets poll_voter_list_query
     *
     * @return \OpenAPI\Client\Model\SendBirdPollVoterListQuery|null
     */
    public function getPollVoterListQuery()
    {
        return $this->container['poll_voter_list_query'];
    }

    /**
     * Sets poll_voter_list_query
     *
     * @param \OpenAPI\Client\Model\SendBirdPollVoterListQuery|null $poll_voter_list_query poll_voter_list_query
     *
     * @return self
     */
    public function setPollVoterListQuery($poll_voter_list_query)
    {
        $this->container['poll_voter_list_query'] = $poll_voter_list_query;

        return $this;
    }

    /**
     * Gets restricted_user
     *
     * @return \OpenAPI\Client\Model\SendBirdRestrictedUserStatic|null
     */
    public function getRestrictedUser()
    {
        return $this->container['restricted_user'];
    }

    /**
     * Sets restricted_user
     *
     * @param \OpenAPI\Client\Model\SendBirdRestrictedUserStatic|null $restricted_user restricted_user
     *
     * @return self
     */
    public function setRestrictedUser($restricted_user)
    {
        $this->container['restricted_user'] = $restricted_user;

        return $this;
    }

    /**
     * Gets scheduled_user_message_params
     *
     * @return \OpenAPI\Client\Model\SendBirdScheduledUserMessageParams|null
     */
    public function getScheduledUserMessageParams()
    {
        return $this->container['scheduled_user_message_params'];
    }

    /**
     * Sets scheduled_user_message_params
     *
     * @param \OpenAPI\Client\Model\SendBirdScheduledUserMessageParams|null $scheduled_user_message_params scheduled_user_message_params
     *
     * @return self
     */
    public function setScheduledUserMessageParams($scheduled_user_message_params)
    {
        $this->container['scheduled_user_message_params'] = $scheduled_user_message_params;

        return $this;
    }

    /**
     * Gets session_handler
     *
     * @return object|null
     */
    public function getSessionHandler()
    {
        return $this->container['session_handler'];
    }

    /**
     * Sets session_handler
     *
     * @param object|null $session_handler session_handler
     *
     * @return self
     */
    public function setSessionHandler($session_handler)
    {
        $this->container['session_handler'] = $session_handler;

        return $this;
    }

    /**
     * Gets threaded_message_list_params
     *
     * @return \OpenAPI\Client\Model\SendBirdThreadedMessageListParams|null
     */
    public function getThreadedMessageListParams()
    {
        return $this->container['threaded_message_list_params'];
    }

    /**
     * Sets threaded_message_list_params
     *
     * @param \OpenAPI\Client\Model\SendBirdThreadedMessageListParams|null $threaded_message_list_params threaded_message_list_params
     *
     * @return self
     */
    public function setThreadedMessageListParams($threaded_message_list_params)
    {
        $this->container['threaded_message_list_params'] = $threaded_message_list_params;

        return $this;
    }

    /**
     * Gets user
     *
     * @return object|null
     */
    public function getUser()
    {
        return $this->container['user'];
    }

    /**
     * Sets user
     *
     * @param object|null $user user
     *
     * @return self
     */
    public function setUser($user)
    {
        $this->container['user'] = $user;

        return $this;
    }

    /**
     * Gets user_event_handler
     *
     * @return object|null
     */
    public function getUserEventHandler()
    {
        return $this->container['user_event_handler'];
    }

    /**
     * Sets user_event_handler
     *
     * @param object|null $user_event_handler user_event_handler
     *
     * @return self
     */
    public function setUserEventHandler($user_event_handler)
    {
        $this->container['user_event_handler'] = $user_event_handler;

        return $this;
    }

    /**
     * Gets user_message
     *
     * @return object|null
     */
    public function getUserMessage()
    {
        return $this->container['user_message'];
    }

    /**
     * Sets user_message
     *
     * @param object|null $user_message user_message
     *
     * @return self
     */
    public function setUserMessage($user_message)
    {
        $this->container['user_message'] = $user_message;

        return $this;
    }

    /**
     * Gets user_message_params
     *
     * @return \OpenAPI\Client\Model\SendBirdUserMessageParams|null
     */
    public function getUserMessageParams()
    {
        return $this->container['user_message_params'];
    }

    /**
     * Sets user_message_params
     *
     * @param \OpenAPI\Client\Model\SendBirdUserMessageParams|null $user_message_params user_message_params
     *
     * @return self
     */
    public function setUserMessageParams($user_message_params)
    {
        $this->container['user_message_params'] = $user_message_params;

        return $this;
    }

    /**
     * Gets app_info
     *
     * @return \OpenAPI\Client\Model\SendBirdAppInfo|null
     */
    public function getAppInfo()
    {
        return $this->container['app_info'];
    }

    /**
     * Sets app_info
     *
     * @param \OpenAPI\Client\Model\SendBirdAppInfo|null $app_info app_info
     *
     * @return self
     */
    public function setAppInfo($app_info)
    {
        $this->container['app_info'] = $app_info;

        return $this;
    }

    /**
     * Gets current_user
     *
     * @return \OpenAPI\Client\Model\SendBirdUser|null
     */
    public function getCurrentUser()
    {
        return $this->container['current_user'];
    }

    /**
     * Sets current_user
     *
     * @param \OpenAPI\Client\Model\SendBirdUser|null $current_user current_user
     *
     * @return self
     */
    public function setCurrentUser($current_user)
    {
        $this->container['current_user'] = $current_user;

        return $this;
    }

    /**
     * Gets ekey
     *
     * @return string|null
     */
    public function getEkey()
    {
        return $this->container['ekey'];
    }

    /**
     * Sets ekey
     *
     * @param string|null $ekey ekey
     *
     * @return self
     */
    public function setEkey($ekey)
    {
        $this->container['ekey'] = $ekey;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


