<?php
/**
 * UserApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Sendbird
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Sendbird Platform SDK
 *
 * Sendbird Platform API SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendbird.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Sendbird\Test\Api;

use \Sendbird\Configuration;
use \Sendbird\ApiException;
use \Sendbird\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * UserApiTest Class Doc Comment
 *
 * @category Class
 * @package  Sendbird
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class UserApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addRegistrationOrDeviceToken
     *
     * Add a registration or device token.
     *
     */
    public function testAddRegistrationOrDeviceToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for choosePushNotificationContentTemplate
     *
     * Choose a push notification content template.
     *
     */
    public function testChoosePushNotificationContentTemplate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createUser
     *
     * Create a user.
     *
     */
    public function testCreateUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createUserToken
     *
     * Create user token.
     *
     */
    public function testCreateUserToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteUserById
     *
     * Delete a user.
     *
     */
    public function testDeleteUserById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for leaveMyGroupChannels
     *
     * Leave my group channels.
     *
     */
    public function testLeaveMyGroupChannels()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listMyGroupChannels
     *
     * List my group channels.
     *
     */
    public function testListMyGroupChannels()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listRegistrationOrDeviceTokens
     *
     * List registration or device tokens.
     *
     */
    public function testListRegistrationOrDeviceTokens()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listUsers
     *
     * List users.
     *
     */
    public function testListUsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for markAllMessagesAsRead
     *
     * Mark all messages as read.
     *
     */
    public function testMarkAllMessagesAsRead()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for registerAsOperatorToChannelsWithCustomChannelTypes
     *
     * Register as an operator to channels with custom channel types.
     *
     */
    public function testRegisterAsOperatorToChannelsWithCustomChannelTypes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeRegistrationOrDeviceToken
     *
     * Remove a registration or device token - When unregistering all device tokens.
     *
     */
    public function testRemoveRegistrationOrDeviceToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeRegistrationOrDeviceTokenByToken
     *
     * Remove a registration or device token - When unregistering a specific token.
     *
     */
    public function testRemoveRegistrationOrDeviceTokenByToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeRegistrationOrDeviceTokenFromOwnerByToken
     *
     * Remove a registration or device token from an owner.
     *
     */
    public function testRemoveRegistrationOrDeviceTokenFromOwnerByToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for resetPushPreferences
     *
     * Reset push preferences.
     *
     */
    public function testResetPushPreferences()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateChannelInvitationPreference
     *
     * Update channel invitation preference.
     *
     */
    public function testUpdateChannelInvitationPreference()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateCountPreferenceOfChannelByUrl
     *
     * Update count preference of a channel.
     *
     */
    public function testUpdateCountPreferenceOfChannelByUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updatePushPreferences
     *
     * Update push preferences.
     *
     */
    public function testUpdatePushPreferences()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updatePushPreferencesForChannelByUrl
     *
     * Update push preferences for a channel.
     *
     */
    public function testUpdatePushPreferencesForChannelByUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateUserById
     *
     * Update a user.
     *
     */
    public function testUpdateUserById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for viewChannelInvitationPreference
     *
     * View channel invitation preference.
     *
     */
    public function testViewChannelInvitationPreference()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for viewCountPreferenceOfChannelByUrl
     *
     * View count preference of a channel.
     *
     */
    public function testViewCountPreferenceOfChannelByUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for viewNumberOfChannelsByJoinStatus
     *
     * View number of channels by join status.
     *
     */
    public function testViewNumberOfChannelsByJoinStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for viewNumberOfChannelsWithUnreadMessages
     *
     * View number of channels with unread messages.
     *
     */
    public function testViewNumberOfChannelsWithUnreadMessages()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for viewNumberOfUnreadItems
     *
     * View number of unread items.
     *
     */
    public function testViewNumberOfUnreadItems()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for viewNumberOfUnreadMessages
     *
     * View number of unread messages.
     *
     */
    public function testViewNumberOfUnreadMessages()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for viewPushPreferences
     *
     * View push preferences.
     *
     */
    public function testViewPushPreferences()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for viewPushPreferencesForChannelByUrl
     *
     * View push preferences for a channel.
     *
     */
    public function testViewPushPreferencesForChannelByUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for viewUserById
     *
     * View a user.
     *
     */
    public function testViewUserById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for viewWhoOwnsRegistrationOrDeviceTokenByToken
     *
     * View who owns a registration or device token.
     *
     */
    public function testViewWhoOwnsRegistrationOrDeviceTokenByToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
