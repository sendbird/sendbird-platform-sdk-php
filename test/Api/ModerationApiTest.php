<?php
/**
 * ModerationApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Sendbird
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Sendbird Platform SDK
 *
 * Sendbird Platform API SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendbird.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Sendbird\Test\Api;

use \Sendbird\Configuration;
use \Sendbird\ApiException;
use \Sendbird\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ModerationApiTest Class Doc Comment
 *
 * @category Class
 * @package  Sendbird
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ModerationApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for banFromChannelsWithCustomChannelTypes
     *
     * Ban from channels with custom channel types.
     *
     */
    public function testBanFromChannelsWithCustomChannelTypes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for blockUser
     *
     * Block a user.
     *
     */
    public function testBlockUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcBanUser
     *
     * Ban a user.
     *
     */
    public function testGcBanUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcFreezeChannel
     *
     * Freeze a channel.
     *
     */
    public function testGcFreezeChannel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcListBannedUsers
     *
     * List banned users.
     *
     */
    public function testGcListBannedUsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcListMutedUsers
     *
     * List muted users.
     *
     */
    public function testGcListMutedUsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcMuteUser
     *
     * Mute a user.
     *
     */
    public function testGcMuteUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcUnbanUserById
     *
     * Unban a user.
     *
     */
    public function testGcUnbanUserById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcUnmuteUserById
     *
     * Unmute a user.
     *
     */
    public function testGcUnmuteUserById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcUpdateBanById
     *
     * Update a ban.
     *
     */
    public function testGcUpdateBanById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcViewBanById
     *
     * View a ban.
     *
     */
    public function testGcViewBanById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcViewMuteById
     *
     * View a mute.
     *
     */
    public function testGcViewMuteById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listBannedChannels
     *
     * List banned channels.
     *
     */
    public function testListBannedChannels()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listBlockedUsers
     *
     * List blocked users.
     *
     */
    public function testListBlockedUsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listMutedChannels
     *
     * List muted channels.
     *
     */
    public function testListMutedChannels()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for muteInChannelsWithCustomChannelTypes
     *
     * Mute in channels with custom channel types.
     *
     */
    public function testMuteInChannelsWithCustomChannelTypes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ocBanUser
     *
     * Ban a user.
     *
     */
    public function testOcBanUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ocFreezeChannel
     *
     * Freeze a channel.
     *
     */
    public function testOcFreezeChannel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ocListBannedUsers
     *
     * List banned users.
     *
     */
    public function testOcListBannedUsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ocListMutedUsers
     *
     * List muted users.
     *
     */
    public function testOcListMutedUsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ocMuteUser
     *
     * Mute a user.
     *
     */
    public function testOcMuteUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ocUnbanUserById
     *
     * Unban a user.
     *
     */
    public function testOcUnbanUserById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ocUnmuteUserById
     *
     * Unmute a user.
     *
     */
    public function testOcUnmuteUserById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ocUpdateBanById
     *
     * Update a ban.
     *
     */
    public function testOcUpdateBanById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ocViewBanById
     *
     * View a ban.
     *
     */
    public function testOcViewBanById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ocViewMuteById
     *
     * View a mute.
     *
     */
    public function testOcViewMuteById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for unblockUserById
     *
     * Unblock a user.
     *
     */
    public function testUnblockUserById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
