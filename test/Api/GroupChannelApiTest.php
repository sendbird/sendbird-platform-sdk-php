<?php
/**
 * GroupChannelApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  Sendbird
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Sendbird Platform SDK
 *
 * Sendbird Platform API Javascript SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Sendbird\Test\Api;

use \Sendbird\Configuration;
use \Sendbird\ApiException;
use \Sendbird\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * GroupChannelApiTest Class Doc Comment
 *
 * @category Class
 * @package  Sendbird
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class GroupChannelApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for gcAcceptInvitation
     *
     * Accept an invitation.
     *
     */
    public function testGcAcceptInvitation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcBanUser
     *
     * Ban a user.
     *
     */
    public function testGcBanUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcCancelTheRegistrationOfOperators
     *
     * Cancel the registration of operators.
     *
     */
    public function testGcCancelTheRegistrationOfOperators()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcCheckIfMemberById
     *
     * Check if member.
     *
     */
    public function testGcCheckIfMemberById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcCreateChannel
     *
     * Create a channel.
     *
     */
    public function testGcCreateChannel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcDeclineInvitation
     *
     * Decline an invitation.
     *
     */
    public function testGcDeclineInvitation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcDeleteChannelByUrl
     *
     * Delete a channel.
     *
     */
    public function testGcDeleteChannelByUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcFreezeChannel
     *
     * Freeze a channel.
     *
     */
    public function testGcFreezeChannel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcHideOrArchiveChannel
     *
     * Hide or archive a channel.
     *
     */
    public function testGcHideOrArchiveChannel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcInviteAsMembers
     *
     * Invite as members.
     *
     */
    public function testGcInviteAsMembers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcJoinChannel
     *
     * Join a channel.
     *
     */
    public function testGcJoinChannel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcLeaveChannel
     *
     * Leave a channel.
     *
     */
    public function testGcLeaveChannel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcListBannedUsers
     *
     * List banned users.
     *
     */
    public function testGcListBannedUsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcListChannels
     *
     * List channels.
     *
     */
    public function testGcListChannels()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcListMembers
     *
     * List members.
     *
     */
    public function testGcListMembers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcListMutedUsers
     *
     * List muted users.
     *
     */
    public function testGcListMutedUsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcListOperators
     *
     * List operators.
     *
     */
    public function testGcListOperators()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcMuteUser
     *
     * Mute a user.
     *
     */
    public function testGcMuteUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcRegisterOperators
     *
     * Register operators.
     *
     */
    public function testGcRegisterOperators()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcResetChatHistory
     *
     * Reset chat history.
     *
     */
    public function testGcResetChatHistory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcUnbanUserById
     *
     * Unban a user.
     *
     */
    public function testGcUnbanUserById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcUnhideOrUnarchiveChannel
     *
     * Unhide or unarchive a channel.
     *
     */
    public function testGcUnhideOrUnarchiveChannel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcUnmuteUserById
     *
     * Unmute a user.
     *
     */
    public function testGcUnmuteUserById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcUpdateBanById
     *
     * Update a ban.
     *
     */
    public function testGcUpdateBanById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcUpdateChannelByUrl
     *
     * Update a channel.
     *
     */
    public function testGcUpdateChannelByUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcViewBanById
     *
     * View a ban.
     *
     */
    public function testGcViewBanById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcViewChannelByUrl
     *
     * View a channel.
     *
     */
    public function testGcViewChannelByUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gcViewMuteById
     *
     * View a mute.
     *
     */
    public function testGcViewMuteById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
